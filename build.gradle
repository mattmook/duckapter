buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'org.duckapter'
version = '0.8.1'

sourceCompatibility=1.6
targetCompatibility=1.6

repositories {
    mavenCentral()
}

dependencies {
	testCompile 'junit:junit:4.8.2'
}

jar {
    manifest.attributes provider: 'gradle'
}

// publishing
publishing {
    publications {
        groovyMaven(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

// set bintrayUser & bintrayKey in gradle.properties
bintray {

    user = getPropertyOrUseDefault('bintrayUser', 'fake_user')
    key = getPropertyOrUseDefault('bintrayKey', 'fake_key')
    publications = ['groovyMaven']

    def projectName = project.name
    def projectDescription = project.description

    pkg {
        websiteUrl = 'https://code.google.com/p/duckapter/'
        issueTrackerUrl = 'https://github.com/musketyr/duckapter/issues'
        vcsUrl = 'https://github.com/musketyr/duckapter/issues.git'

        repo = 'maven' // or your repo name
        userOrg = 'musketyr'
        name = projectName       // somehow project.* doesn't work in this closure
        desc = projectDescription
        licenses = ['Apache-2.0']
    }
    // dryRun = true // whether to run this as dry-run, without deploying
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

bintrayUpload.dependsOn test

String getPropertyOrUseDefault(String propertyName, String defaultValue) {
    hasProperty(propertyName) ? getProperty(propertyName) : defaultValue
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
